垃圾回收针对的是堆空间，目前垃圾回收算法主要有两类：引用计数法和可达性分析法。JVM的垃圾回收采用了可达性分析法。

1、分代管理算法：
    分代管理就是把内存划分成不同的区域进行管理。
    其思想来源是：有些对象存活的时间短，有些对象存活的时间长，把存活时间短的对象放在一个区域管理，把存活时间长的对象放在另一个区域管理。
    那么可以为两个不同的区域选择不同的算法，加快垃圾回收的效率。
    我们假定内存被划分成2个代：新生代和老生代。把容易死亡的对象放在新生代，通常采用复制算法回收；把预期存活时间较长的对象放在老生代，通常采用标记清除算法。
2、复制算法：
    复制算法的实现也有很多种，可以使用两个分区，也可以使用多个分区。使用两个分区时内存的利用率只有50%；使用多个分区，则可以提高内存的使用率。
    我们这里演示把堆空间分为1个新生代（分为3个分区：Eden、Survivor0、Survivor1）、1个老生代的收集过程。
    普通对象创建的时候都是放在Eden区，S0和S1分别是两个存活区。第一次将Eden和S0里面的活跃对象都放到S1区，第二次将Eden和S1里面的活跃对象都放到S0区，反复循环。
3、标记清除算法：
    从根集合出发，遍历对象，把活跃对象入栈，并依次处理。
    通常采用深度优先搜索，节约内存。
    标记清除算法最大的缺点就是使内存碎片化。
4、标记压缩算法：
    标记压缩算法是为了解决标记清除算法中使内存碎片化的问题，除了上述的标记动作之外，还会把活跃对象重新整理从头开始排列，减少内存碎片。
